<%-
  ##
  # find common nearest ancestor
  #
  if project.blank?
    projects = objects.map(&:project).uniq
    families = projects.map(&:self_and_ancestors)
    project  = families.inject(&:&).last
    # if project is still nil, then no scripts will show up
  end
  
  ##
  # find matching scripts, which match all objects
  wikiscripts = wikiscripts(objects, {:project => project}.compact )
  
  ##
  # select wikiscript by permission
  wikiscripts.select!{|w| !w.permission_required? || w.permitted?(project) }
  
  ##
  # find current query
  back = request.url
  
  ##
  # set obj to controller
  obj = controller
  
  scripts = wikiscripts.map do |script|
    [script,
    if script.modal?
      modal_tag_id = SecureRandom.uuid + "_modal"
      modal_form_partial = textilizable(script.modal, :object => obj, :headings => false)
      
      modal_other_params = CGI.unescape({
            :object  => {:class => "WikiPage", :id => script.page_id},
            :objects => {:class => local_assigns[:class_name], :ids => objects.map(&:id)},
            :each    => (script.each? ? 1 : nil),
            :sync    => (script.sync? ? 1 : nil),
            :back    => @back
          }.to_query).split(/&/).map{|kv| k,v = kv.split(/\=/); hidden_field_tag(k, v)}.join.html_safe
          
      modal = content_tag(:div, :id => "#{modal_tag_id}", :style => "display:none;") do
        form_tag( 
          run_project_script_path(project.identifier, script.id),
          :method   => :get,
          :data     => script.danger? ? {:confirm => l(:text_are_you_sure)} : nil,
          :onsubmit => "hideModal(this);".html_safe
        ) do
          content_tag(:div, :class => "box tabular") do
            modal_form_partial + modal_other_params
          end + submit_tag(l(:button_submit))
        end 
      end
      
      link_to( script.title, "", :onclick => "showModal('#{modal_tag_id}', '600px'); return false;") + modal
      
    else
      ##############################################################################
      # just build link
      ##############################################################################
      link_to( 
        script.title, 
        run_project_script_path(
          :project_id => project.identifier,
          :id         => script.id, 
          :object     => {:class => "WikiPage", :id => script.page_id},
          :objects    => {:class => local_assigns[:class_name], :ids => objects.map(&:id)},
          :each       => (script.each? ? 1 : nil),
          :sync       => (script.sync? ? 1 : nil),
          :back       => @back
        ), 
        :data     => script.danger? ? {:confirm => l(:text_are_you_sure)} : nil
      ) 
    end
    ]
  end.to_h
%>
<!-- scripts -->
<% if user_allowed_to_run_scripts(objects) %>
  <li class="folder icon icon-script">
    <% if (scripts.any?{|script,link|script.green?}) %>
      <a href="#" class="submenu"><%= l(:label_scripts) %></a>
      <ul>
      <% scripts.select{|script, link| script.green?}.each do |script, link| %>
        <li class="green"><%= link %></li>
      <% end %>
      </ul>
    <% else %>
      <a href="#" class="disabled"><%= l(:label_no_scripts) %></a>
    <% end %>
  </li>
<% end %>

<!-- danger scripts -->
<% if user_allowed_to_run_red_scripts(objects) %>
  <li class="folder icon icon-danger-script">
    <%  %>
    <% if (scripts.any?{|script,link|script.red?}) %>
      <a href="#" class="submenu"><%= l(:label_danger_scripts) %></a>
      <ul>
      <% scripts.select{|script, link| script.red?}.each do |script, link| %>
        <li class="red"><%= link %></li>
      <% end %>
      </ul>
    <% else %>
      <a href="#" class="disabled"><%= l(:label_no_danger_scripts) %></a>
    <% end %>
  </li>
<% end %>
